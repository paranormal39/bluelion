{"version":3,"sources":["images/Frank.png","images/BigRig.png","images/OilRig.png","images/Banner.png","images/TankPricing.png","images/TruckWashing.png","images/OilRigPricing.png","Components/Navbar.jsx","Components/Jumbotron.jsx","pages/home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","react_router_dom","to","Component","Jumbotron","home","src_Components_Navbar","src_Components_Jumbotron","src","require","alt","App","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19f7fe68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Frank.209df9f9.png\";","module.exports = __webpack_public_path__ + \"static/media/BigRig.39a75d37.png\";","module.exports = __webpack_public_path__ + \"static/media/OilRig.19509dd6.png\";","module.exports = __webpack_public_path__ + \"static/media/Banner.9fecb56b.png\";","module.exports = __webpack_public_path__ + \"static/media/TankPricing.5c9ec4f4.png\";","module.exports = __webpack_public_path__ + \"static/media/TruckWashing.b6433082.png\";","module.exports = __webpack_public_path__ + \"static/media/OilRigPricing.479e46e4.png\";","import React, {Component} from 'react';\nimport './Navbar.css';\nimport {Link} from 'react-router-dom';\n\nclass Navbar extends Component{\n    render(){\n        return(\n       \n <nav className=\"navbar navbar-toggleable-md\">\n        <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">BlueLion Services                      </Link>Contact (432)-295-3102\n         \n        </div>\n      </nav>\n\n        );\n    }\n\n}\nexport default Navbar ","import React,{Component} from 'react';\nimport './Jumbotron.css';\n\nclass Jumbotron extends Component{\n    render(){\n        return(\n            <div>\n<div className=\"jumbotron\">\n    <div className=\"container\">\n      <h1 className=\"display-3\">Power Washing</h1>\n      <p> for the Oil and Gas Industry</p>\n     \n    </div>\n  </div>\n            </div>\n        );\n    }\n}\nexport default Jumbotron;","import React, {Component} from 'react';\nimport './home.css';\nimport Navbar from '../Components/Navbar.jsx';\nimport Jumbotron from '../Components/Jumbotron.jsx';\n\n\nclass home extends Component{\n    render(){\n        return(\n            \n           <div>\n               <Navbar/>\n               <Jumbotron/>\n              <div>\n                  <h1>\n                     \n                  </h1>\n            <div >\n           \n   \n    <div className=\"row\">\n      <div className=\"col-md-4\">\n      <img src={require('../images/Frank.png')} className='display-2' alt=\"frack\"/>\n      </div>\n      <div className=\"col-md-4\">\n      <img src={require('../images/BigRig.png')} className='display-2'alt=\"big rig\"/>\n      </div>\n      <div className=\"col-md-4\">\n      <img src={require('../images/OilRig.png')} className='display-2'alt=\"oil rig\"/>\n      </div>\n    </div>\n\n    \n\n  </div>\n  <img src={require('../images/Banner.png')} className='display-4' alt=\"banner\"/>\n                \n                <div className=\"row\">\n      <div className=\"col-md-4\">\n      <img src={require('../images/TankPricing.png')} className='display-2'alt=\"pricing\"/>\n      </div>\n      <div className=\"col-md-4\">\n      <img src={require('../images/TruckWashing.png')} className='display-2'alt=\"truck\"/>\n      </div>\n      <div className=\"col-md-4\">\n      <img src={require('../images/OilRigPricing.png')} className='display-2'alt=\"oil\"/>\n      </div>\n    </div>\n                   \n                    \n                    </div>\n                </div>\n          \n\n        );\n    }\n}\n\nexport default home;\n\n","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport home from './pages/home.jsx';\n//import navbar from './Components/Navbar.jsx';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          HelloWorld\n          <div>\n            <Route exact path=\"/\" component={home} />\n          </div>\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}